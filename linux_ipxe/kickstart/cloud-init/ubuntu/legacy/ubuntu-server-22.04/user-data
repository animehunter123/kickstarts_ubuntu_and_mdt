#cloud-config
write_files:
  - content: |
      # Enable debug logging for the subiquity server
      systemctl --no-pager enable --now snap.subiquity.server.service
      echo "SUBIQUITY_DEBUG=true" >> /etc/environment
    path: /root/enable_subiquity_debug.sh
    permissions: '0700'

autoinstall:
  version: 1
  identity:
    hostname: localhost
    username: INSERT_YOUR_USERNAME_HERE
    password: "$6$6Vzl0s8nx34m65j2$K.F6MsoKAFBK6ehnUtj9Gfhp/oy/U7mlJSkiurOKiaZvJwVDaH8kzRem/HfSl1fNeCmPBfezxz5yENj28b87r0"

  storage:
    config:
    - grub_device: true
      id: disk-sda
      path: /dev/sda
      ptable: msdos
      type: disk
      wipe: superblock-recursive
    - device: disk-sda
      flag: boot
      id: partition-0
      number: 1
      size: 2G
      type: partition
    - fstype: ext4
      id: format-0
      type: format
      volume: partition-0
    - device: format-0
      id: mount-0
      path: /boot
      type: mount 
    - device: disk-sda
      id: partition-1
      number: 2
      size: -1
      type: partition
      wipe: superblock
    - fstype: ext4
      id: format-1
      type: format
      volume: partition-1
    - device: format-1
      id: mount-1
      path: /
      type: mount

  apt:
    preserve_sources_list: false
    primary:
      - arches: [i386, amd64]
        uri: "http://192.168.0.81/repos/apt"

  network:
    network:
      version: 2
      renderer: NetworkManager

  late-commands:
    # ALWAYS REMEMBER: wget's inside ubuntu-autoinstall CANNOT USE DNS!!!!!!!!!!! use IP ONLY 
    - printf 'blacklist {\n    devnode "^(ram|raw|loop|fd|md|dm-|sr|scd|st|sda)[0-9]*"\n}' >> /target/etc/multipath.conf 
    - curtin in-target --target=/target -- sh -c 'echo root:QHQKD20mcxv9g | chpasswd --encrypted'
    - echo 'INSERT_YOUR_USERNAME_HERE ALL=(ALL) NOPASSWD:ALL' > /target/etc/sudoers.d/INSERT_YOUR_USERNAME_HERE
    - echo "PermitRootLogin yes" >> /target/etc/ssh/sshd_config
    - curtin in-target --target=/target -- sh -c 'sed -i  "s/^Host \*/Host \*\n    StrictHostKeyChecking no\n    UserKnownHostsFile \/dev\/null\n    IdentityFile ~\/.ssh\/id_rsa\n    HostKeyAlgorithms \*\n    Ciphers `ssh -Q cipher|tr "\n" "," | sed "s/,$//"`\n    KexAlgorithms `ssh -Q kex|tr "\n" "," | sed "s/,$//"`/" /etc/ssh/ssh_config'

    # INSTALL FIREFOX 111, via:
    # 1. Fresh Kick a 2204 with Internet, snap install firefox, locate firefox > allfirefoxfiles.txt, tar cvpzf allfiles.tar.tz -T mylist.txt, Now I have all traces of firefox on system (with /snap/) as a tarball > restore this kick FIRST!
    # 2. Then a unzip of official firefox111 to /opt/firefox111, and a symlink workaround -- to trick snapd that firefox was installed from internet! Thats it!
    - curtin in-target --target=/target -- sh -c 'cd /opt ; mkdir firefox111 ; cd firefox111 ; sudo snap remove firefox 2>/dev/null ; wget "http://192.168.0.81/software/Firefox/firefox111_for_kub2204_kicks/firefox_111.0.1%2Bbuild2-0ubuntu0.22.04.1_mt1_amd64_snapfiles.tar.gz" ; tar xvfpz *gz -C / ; mv /snap/bin/firefox /snap/bin/firefox/old ; wget "http://192.168.0.81/software/Firefox/firefox111_for_kub2204_kicks/firefox-111.0.tar.bz2" ; bunzip2 *.bz2 ; tar xvfp *.tar ; mv /snap/bin/firefox /snap/bin/firefox.old ;ln -s /opt/firefox111/firefox/firefox /snap/bin/firefox; chmod 777 -R /opt/firefox111/ ; chmod 777 /snap/bin/firefox'
 
    # TODO: Disable PIP.CONF on low side, because low-side uses internet pypi instead of nexus (no need to import the 888GB into lowside nexus)
    #  - curtin in-target --target=/target -- sh -c 'wget -O /etc/pip.conf http://192.168.0.5:8082/pip/pip.conf'
 
    # TODO: Disable snap refresh (Not working on low side yet, but can ignore on high gapped nw)
    #  - curtin in-target --target=/target -- sh -c 'snap refresh --hold ; snap set system refresh.metered=hold 2>/dev/null ; systemctl disable snapd --now 2>/dev/null ; systemctl mask snapd --now 2>/dev/null ; echo "127.0.0.1 api.snapcraft.io" >> /etc/hosts'
 
    # Workaround to ensure that DNS is automatically pulled from DHCP and not from system-resolved service:
    # - rm -f /target/etc/nsswitch.conf
    - curtin in-target --target=/target -- sh -c ' sed -i "s/\(hosts. \+\)/\1dns /" /etc/nsswitch.conf '
    - rm -f /target/etc/resolv.conf
    - curtin in-target --target=/target -- sh -c ' cd /etc ; systemctl disable systemd-resolved --now ; sed -i "s/\[main\]/\[main\]\ndns=default/" /etc/NetworkManager/NetworkManager.conf '

  packages:
    - open-vm-tools
    - network-manager
    - ssh
    - nfs-common
    - cifs-utils
    - python3-pip
    - python-is-python3
    - whois
    - git
    - pssh
    - openssh-client-ssh1
    - curl
    - byobu
    - fish
    - iotop
    - ncdu
    - net-tools
