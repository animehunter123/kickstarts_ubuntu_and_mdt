#!ipxe

#TODO Need to Implement Tar Restore (see highside, this is already done)

# Figure out if client is 64-bit capable
cpuid --ext 29 && set arch x64 || set arch x86
cpuid --ext 29 && set archl amd64 || set archl i386

# TODO: You need at add variables (high-side already done)  NOTE --- they must be IP (FQDN DOES NOT WORK WITH IPXE FOR LIVECD NOR UBUNTU KICKS)

###################### MAIN MENU ####################################

:start
menu iPXE boot menu
item --gap --             -------------------------------Installation ------------------------------
item --key m mdt          [M] - MDT
item --key l linux-live   [L] - LiveCDs and Recovery
item --key a acronis      [A] - Acronis
item --key k linux-ks     [K] - Kickstart Linux
item --key s spacewalk    [S] - Spacewalk
item --key g ghost        [G] - Ghost
item --key e esx-menu     [E] - Esx
item
item --gap --             ------------------------- Advanced options -------------------------------
item --key c config       Configure settings
item shell                Drop to iPXE shell
item reboot               Reboot computer
item
item --key x exit         [X] - Exit iPXE and continue boot
choose --default mdt selected || goto cancel
set menu-timeout 0
goto ${selected}

:cancel
echo You cancelled the menu, dropping you to a shell

:shell
echo Type 'exit' to get the back to the menu
shell
set menu-timeout 0
set submenu-timeout 0
goto start

:failed
echo Booting failed, dropping to shell
goto shell

:reboot
reboot

:exit
exit

:config
config
goto start

:back
set submenu-timeout 0
clear submenu-default
goto start

#########################################################################
# TOP MDT MENU
#########################################################################
:mdt
kernel wimboot
initrd -n BCD 		http://172.16.0.215:81/BCD 		            BCD
initrd -n boot.sdi 	http://172.16.0.215:81/boot.sdi		        boot.sdi
initrd -n boot.wim 	http://172.16.0.215/LiteTouchPE_x64.wim		boot.wim
#initrd -n boot.wim 	http://172.16.0.215/LiteTouchPE_x86.wim		boot.wim #Use this for Bios, like HP Elitebook840G3
boot
goto start

#########################################################################
# TOP LINUX KICKSTART MENU
#########################################################################
:linux-ks
set submenu-timeout 0
clear submenu-default
menu LINUX KICKSTART
item --key c linux-ks-centos [C] - CentOS
item --key u linux-ks-ubuntu [U] - Ubuntu
item --key r linux-ks-rocky-versions  [R] - Rocky
item
item --key b linux-ks-back   [B] - Back to previous 
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
goto start # End of Submenu

:linux-ks-centos
goto linux-ks-centos-menu

:linux-ks-ubuntu
goto linux-ks-ubuntu-menu

:linux-ks-rocky
goto linux-ks-rocky-menu

:linux-ks-back
set submenu-timeout 0
clear submenu-default
goto start

#########################################################################
# LINUX KICKSTART \ CENTOS
#########################################################################
:linux-ks-centos-menu
set submenu-timeout 0
clear submenu-default
menu CENTOS KICKSTART 
item linux-ks-centos-7-core-bios      CentOS7 CORE     (BIOS)
item linux-ks-centos-7-core-uefi-nvme CentOS7 CORE     (UEFI NVME)
item linux-ks-centos-7-core-uefi-sda  CentOS7 CORE     (UEFI SDA)
item linux-ks-centos-7-mate-bios      CentOS7 GUI MATE (BIOS)
item linux-ks-centos-7-mate-uefi-nvme CentOS7 GUI MATE (UEFI NVME)
item linux-ks-centos-7-mate-uefi-sda  CentOS7 GUI MATE (UEFI SDA)
item
item --key b linux-ks-centos-back [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu

:linux-ks-centos-back
set submenu-timeout 0
clear submenu-default
goto linux-ks

:linux-ks-centos-7-core-bios
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/vmlinuz ip=dhcp ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/centos7-core-bios.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/initrd.img
boot
goto start

:linux-ks-centos-7-core-uefi-nvme
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/vmlinuz ip=dhcp initrd=initrd.img ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/centos7-core-uefi-nvme.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/initrd.img
boot
goto start

:linux-ks-centos-7-core-uefi-sda
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/vmlinuz ip=dhcp initrd=initrd.img ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/centos7-core-uefi-sda.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/initrd.img
boot
goto start

:linux-ks-centos-7-mate-bios
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/vmlinuz ip=dhcp ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/centos7-mate-bios.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/initrd.img
boot
goto start

:linux-ks-centos-7-mate-uefi-nvme
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/vmlinuz ip=dhcp initrd=initrd.img ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/centos7-mate-uefi-nvme.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/initrd.img
boot
goto start

:linux-ks-centos-7-mate-uefi-sda
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/vmlinuz ip=dhcp initrd=initrd.img ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/centos7-mate-uefi-sda.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/centos/7/os/x86_64/images/pxeboot/initrd.img
boot
goto start

#########################################################################
# LINUX KICKSTART \ UBUNTU 
#########################################################################
:linux-ks-ubuntu-menu
set submenu-timeout 0
clear submenu-default
menu UBUNTU KICKSTART 
item --key u linux-ks-ubuntu-uefi-menu [U] - UEFI
item --key l linux-ks-ubuntu-legacy-menu [L] - LEGACY BIOS
item
item --key b linux-ks [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu

#########################################################################
# LINUX KICKSTART \ UBUNTU \ UEFI
#########################################################################
:linux-ks-ubuntu-uefi-menu
set submenu-timeout 0
clear submenu-default
menu UBUNTU UEFI KICKSTART  
item --key n linux-ks-ubuntu-uefi-nvme-menu [N] - NVME
item --key s linux-ks-ubuntu-uefi-sda-menu [S] - SDA
item
item --key b linux-ks-ubuntu-menu [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu

#########################################################################
# LINUX KICKSTART \ UBUNTU \ UEFI \ SDA
#########################################################################
:linux-ks-ubuntu-uefi-sda-menu
set submenu-timeout 0
clear submenu-default
menu UBUNTU UEFI KICKSTART - SDA
item --key s linux-ks-ubuntu-uefi-sda-2204-server    [S] - Ubuntu 22.04 SERVER
item --key k linux-ks-ubuntu-uefi-sda-2204-kubuntu   [K] - Ubuntu 22.04 GUI KDE
# item         linux-ks-ubuntu-uefi-sda-2010-server        - Ubuntu 20.10 SERVER
# item         linux-ks-ubuntu-uefi-sda-2010-kubuntu       - Ubuntu 20.10 GUI KDE
# item         linux-ks-ubuntu-uefi-sda-2004-server        - Ubuntu 20.04 SERVER
item
item --key b linux-ks-ubuntu-uefi-menu          [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu

:linux-ks-ubuntu-uefi-sda-2204-server
kernel http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_22.04_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/sda/ubuntu-server-22.04/ boot=casper ip=dhcp raid=noautodetect initrd=initrd ---
initrd http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/initrd
boot
goto start

:linux-ks-ubuntu-uefi-sda-2204-kubuntu
kernel http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_22.04_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/sda/kubuntu-server-22.04/ boot=casper ip=dhcp raid=noautodetect initrd=initrd ---
initrd http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/initrd
boot
goto start

# :linux-ks-ubuntu-uefi-sda-2010-server
# kernel http://172.16.0.215:82/lm_ubuntu_20.10_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_20.10_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug autoinstall autoinstall-debug-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/sda/ubuntu-server-20.10/ boot=casper ip=dhcp raid=noautodetect initrd=initrd ---
# initrd http://172.16.0.215:82/lm_ubuntu_20.10_server/casper/initrd
# boot
# goto start

# :linux-ks-ubuntu-uefi-sda-2004-server
# kernel http://172.16.0.215:82/lm_ubuntu_20.04.1_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_20.04.1_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/sda/ubuntu-server-20.04/ boot=casper ip=dhcp raid=noautodetect initrd=initrd ---
# initrd http://172.16.0.215:82/lm_ubuntu_20.04.1_server/casper/initrd
# boot
# goto start

# :linux-ks-ubuntu-uefi-sda-2010-kubuntu
# kernel http://172.16.0.215:82/lm_ubuntu_20.10_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_20.10_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/sda/kubuntu-server-20.10/ boot=casper ip=dhcp raid=noautodetect initrd=initrd --- 
# initrd http://172.16.0.215:82/lm_ubuntu_20.10_server/casper/initrd
# boot
# goto start

#########################################################################
# LINUX KICKSTART \ UBUNTU \ UEFI \ NVME
#########################################################################
:linux-ks-ubuntu-uefi-nvme-menu
set submenu-timeout 0
clear submenu-default
menu UBUNTU UEFI KICKSTART - NVME
item --key s linux-ks-ubuntu-uefi-nvme-2204-server    [S] - Ubuntu 22.04 SERVER
item --key k linux-ks-ubuntu-uefi-nvme-2204-kubuntu   [K] - Ubuntu 22.04 GUI KDE
item
item --key b linux-ks-ubuntu-uefi-menu           [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu

:linux-ks-ubuntu-uefi-nvme-2204-server
kernel http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_22.04_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/nvme/ubuntu-server-22.04/ boot=casper ip=dhcp raid=noautodetect initrd=initrd ---
initrd http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/initrd
boot
goto start

:linux-ks-ubuntu-uefi-nvme-2204-kubuntu
kernel http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_22.04_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/nvme/kubuntu-server-22.04/ boot=casper ip=dhcp raid=noautodetect initrd=initrd ---
initrd http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/initrd
boot
goto start

# :linux-ks-ubuntu-uefi-nvme-2010-server
# kernel http://172.16.0.215:82/lm_ubuntu_20.10_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_20.10_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/nvme/ubuntu-server-20.10/ boot=casper ip=dhcp raid=noautodetect initrd=initrd ---
# initrd http://172.16.0.215:82/lm_ubuntu_20.10_server/casper/initrd
# boot
# goto start

# :linux-ks-ubuntu-uefi-nvme-2004-server
# kernel http://172.16.0.215:82/lm_ubuntu_20.04.1_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_20.04.1_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/nvme/ubuntu-server-20.04/ boot=casper ip=dhcp raid=noautodetect initrd=initrd ---
# initrd http://172.16.0.215:82/lm_ubuntu_20.04.1_server/casper/initrd
# boot
# goto start

# :linux-ks-ubuntu-uefi-nvme-2010-kubuntu
# kernel http://172.16.0.215:82/lm_ubuntu_20.10_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_20.10_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/uefi/nvme/kubuntu-server-20.10/ boot=casper ip=dhcp raid=noautodetect initrd=initrd --- 
# initrd http://172.16.0.215:82/lm_ubuntu_20.10_server/casper/initrd
# boot
# goto start

#########################################################################
# LINUX KICKSTART \ UBUNTU \ LEGACY
#########################################################################
:linux-ks-ubuntu-legacy-menu
set submenu-timeout 0
clear submenu-default
menu UBUNTU LEGACY KICKSTART
item --key s linux-ks-ubuntu-legacy-2204-server    [S] - Ubuntu 2204 SERVER  #22.04.1
item --key k linux-ks-ubuntu-legacy-2204-kubuntu   [K] - Ubuntu 2204 GUI KDE #22.04.1
# item         linux-ks-ubuntu-legacy-2004-kubuntu         Ubuntu 2004 KUBUNTU #20.04.5
# item         linux-ks-ubuntu-legacy-2004-server          Ubuntu 2004 SERVER #20.04.5
item
item --key b linux-ks-ubuntu-menu                  [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu


:linux-ks-ubuntu-legacy-2204-server
kernel http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_22.04_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/legacy/ubuntu-server-22.04/ boot=casper ip=dhcp ---
initrd http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/initrd
boot
goto start

:linux-ks-ubuntu-legacy-2204-kubuntu
kernel http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_22.04_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/legacy/kubuntu-server-22.04/ boot=casper ip=dhcp ---
initrd http://172.16.0.215:82/lm_ubuntu_22.04_server/casper/initrd
boot
goto start

# :linux-ks-ubuntu-legacy-2004-server
# kernel http://172.16.0.215:82/lm_ubuntu_20.04.5_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_20.04.5_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/legacy/ubuntu-server-20.04/ boot=casper ip=dhcp ---
# initrd http://172.16.0.215:82/lm_ubuntu_20.04.5_server/casper/initrd
# boot
# goto start

# :linux-ks-ubuntu-legacy-2004-kubuntu
# kernel http://172.16.0.215:82/lm_ubuntu_20.04.5_server/casper/vmlinuz nfsroot=172.16.0.215:/lm_iso/lm_ubuntu_20.04.5_server ro netboot=nfs file=/cdrom/preseed/ubuntu-server.seed  autoinstall autoinstall-debug ds=nocloud-net;s=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/cloud-init/ubuntu/legacy/kubuntu-server-20.04/ boot=casper ip=dhcp ---
# initrd http://172.16.0.215:82/lm_ubuntu_20.04.5_server/casper/initrd
# boot
# goto start


















#########################################################################
# LINUX KICKSTART \ ROCKY
#########################################################################
:linux-ks-rocky-versions
set submenu-timeout 0
clear submenu-default
menu ROCKY VERSIONS
item --key 8 linux-ks-rocky-menu-8             [8] - ROCKY 8
item --key 9 linux-ks-rocky-menu-9             [9] - ROCKY 9
item
item --key b linux-ks-rocky-back [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu

:linux-ks-rocky-menu-8
set submenu-timeout 0
clear submenu-default
menu ROCKY ENTERPRISE 8 
item linux-ks-rocky-8-core-bios             ROCKY8 CORE    (BIOS)
item linux-ks-rocky-8-core-uefi-nvme-or-sda ROCKY8 CORE    (UEFI NVME/SDA)
item linux-ks-rocky-8-kde-bios              ROCKY8 GUI KDE (BIOS)
item linux-ks-rocky-8-kde-uefi-nvme-or-sda  ROCKY8 GUI KDE (UEFI NVME/SDA)
item
item --key b linux-ks-rocky-back-sub [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu

:linux-ks-rocky-menu-9
set submenu-timeout 0
clear submenu-default
menu ROCKY ENTERPRISE 9 
item linux-ks-rocky-9-core-bios             ROCKY9 CORE    (BIOS) 
item linux-ks-rocky-9-core-uefi-nvme-or-sda ROCKY9 CORE    (UEFI NVME/SDA) 
item linux-ks-rocky-9-kde-bios              ROCKY9 GUI KDE (BIOS) 
item linux-ks-rocky-9-kde-uefi-nvme-or-sda  ROCKY9 GUI KDE (UEFI NVME/SDA) 
item
item --key b linux-ks-rocky-back-sub [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu

:linux-ks-rocky-back
set submenu-timeout 0
clear submenu-default
goto linux-ks

:linux-ks-rocky-back-sub
set submenu-timeout 0
clear submenu-default
goto linux-ks-rocky-versions




# ROCKY 8 KICKSTARTS
:linux-ks-rocky-8-core-bios
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/kickstart/images/pxeboot/vmlinuz ip=dhcp ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/rocky8-core-bios.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/kickstart/images/pxeboot/initrd.img
boot
goto start

:linux-ks-rocky-8-kde-bios
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/kickstart/images/pxeboot/vmlinuz ip=dhcp ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/rocky8-kde-bios.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/kickstart/images/pxeboot/initrd.img
boot
goto start

:linux-ks-rocky-8-core-uefi-nvme-or-sda
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/kickstart/images/pxeboot/vmlinuz initrd=initrd.img ip=dhcp ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/rocky8-core-uefi-nvme-or-sda.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/kickstart/images/pxeboot/initrd.img
boot
goto start

:linux-ks-rocky-8-kde-uefi-nvme-or-sda
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/kickstart/images/pxeboot/vmlinuz initrd=initrd.img ip=dhcp ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/rocky8-kde-uefi-nvme-or-sda.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/kickstart/images/pxeboot/initrd.img
boot
goto start





# ROCKY 9 KICKSTARTS
:linux-ks-rocky-9-core-bios
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/9/BaseOS/x86_64/kickstart/images/pxeboot/vmlinuz initrd=initrd.img inst.noverifyssl ip=dhcp inst.text inst.ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/rocky9-core-bios.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/9/BaseOS/x86_64/kickstart/images/pxeboot/initrd.img
boot
goto start

:linux-ks-rocky-9-core-uefi-nvme-or-sda
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/9/BaseOS/x86_64/kickstart/images/pxeboot/vmlinuz initrd=initrd.img inst.noverifyssl ip=dhcp inst.text inst.ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/rocky9-core-uefi-nvme-or-sda.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/9/BaseOS/x86_64/kickstart/images/pxeboot/initrd.img
boot
goto start

:linux-ks-rocky-9-kde-bios
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/9/BaseOS/x86_64/kickstart/images/pxeboot/vmlinuz initrd=initrd.img inst.noverifyssl ip=dhcp inst.text inst.ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/rocky9-kde-bios.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/9/BaseOS/x86_64/kickstart/images/pxeboot/initrd.img
boot
goto start

:linux-ks-rocky-9-kde-uefi-nvme-or-sda
kernel http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/9/BaseOS/x86_64/kickstart/images/pxeboot/vmlinuz initrd=initrd.img inst.noverifyssl ip=dhcp inst.text inst.ks=http://YOUR_WEBSERVER.YOURDOMAIN.COM/http-git/kickstart/ks/rocky9-kde-uefi-nvme-or-sda.cfg
initrd http://YOUR_WEBSERVER.YOURDOMAIN.COM/repos/rocky/9/BaseOS/x86_64/kickstart/images/pxeboot/initrd.img
boot
goto start

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ STILL WORKING ON ROCKY  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ STILL WORKING ON ROCKY  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ STILL WORKING ON ROCKY  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@









#########################################################################
# TOP LINUX LIVE CD MENU
#########################################################################
:linux-live
set submenu-timeout 0
clear submenu-default
menu LINUX LIVE CD 
item --key l linux-live-kubuntu-iso         [L] - Kubuntu LiveCD (22.04 NFS, w. Cifs/Nfs/VSCode/Partitions)
item --key k linux-live-kubuntu-nfs1        [K] - Kubuntu LiveCD (20.04 NFS, Default ISO)
item --key c linux-live-foss-clonezilla     [C] - FOSS CloneZilla (Clonezilla 22.04)
item --key r linux-live-foss-rescuezilla    [R] - FOSS RescueZilla (Clonezilla 22.04)
item --key v linux-live-vyos                [V] - Vyos (L3 Router LiveCD)
item --key p linux-live-proxmox             [P] - Proxmox PVE Installer (Live Recov) NOTFINISHED
item --key u linux-live-kubuntu-2404        [U] - Kunbuntu 24.04 (Live Recov) NOTFINISHED

# item --key i linux-live-kubuntu-nfs2        [I] - Kubuntu LiveCD (22.04 NFS, Default ISO)
# item --key z linux-live-lm-rescuezilla      [Z] - LM RescueZilla (Clonezilla 20.04, BobL)
# item --key o linux-live-bootrepair          [O] - Boot Repair (Grub Repairs)


item
item --key b linux-ks-back          [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
goto start # END OF SUBMENU

:linux-live-kubuntu-nfs1
set server_ip 172.16.0.215
set nfs_path /lm_iso/lm_20-04-Kubuntu
kernel http://172.16.0.215:82/lm_20-04-Kubuntu/casper/vmlinuz  || read void
initrd http://172.16.0.215:82/lm_20-04-Kubuntu/casper/initrd   || read void
imgargs vmlinuz initrd=initrd root=/dev/nfs boot=casper netboot=nfs nfsroot=${server_ip}:${nfs_path} ip=dhcp splash quiet -- || read void
boot
goto start

:linux-live-kubuntu-nfs2
set server_ip 172.16.0.215
set nfs_path /lm_iso/lm_22-04-Kubuntu
kernel http://172.16.0.215:82/lm_22-04-Kubuntu/casper/vmlinuz  || read void
initrd http://172.16.0.215:82/lm_22-04-Kubuntu/casper/initrd   || read void
imgargs vmlinuz initrd=initrd root=/dev/nfs boot=casper netboot=nfs nfsroot=${server_ip}:${nfs_path} ip=dhcp splash quiet -- || read void
# kernel http://172.16.0.215:82/lm_20-04-Kubuntu/casper/vmlinuz  || read void
# echo Sanboot-Http Loading ISO...
# sanboot http://172.16.0.5:8083/Ubuntu+Kubuntu/kubuntu-22.04-desktop-amd64.iso || goto failed
boot
goto start

:linux-live-kubuntu-iso
set server_ip 172.16.0.215
set nfs_path /lm_iso/lm_22-04-Kubuntu_Custom/kubuntu-CUSTOM
initrd http://172.16.0.215:82/lm_22-04-Kubuntu/casper/initrd   || read void
kernel http://172.16.0.215:82/lm_22-04-Kubuntu_Custom/kubuntu-CUSTOM/casper/vmlinuz  || read void
imgargs vmlinuz initrd=initrd root=/dev/nfs boot=casper netboot=nfs nfsroot=${server_ip}:${nfs_path} ip=dhcp splash quiet -- || read void
boot
goto start

# TODO THIS IS NOT FULLY FUNCTIONING YET, might need --- to use the pve-iso-2-pxe.sh script from the morph027/pve-iso-2-pxe repository to extract the linux26 and initrd.img files from the Proxmox ISO.
:linux-live-proxmox
echo Sanboot Http Loading file: proxmox-ve_8.2-1.iso ISO...
sanboot --no-describe http://172.16.0.215:82/proxmox-ve_8.2-1.iso || goto failed
goto start

:linux-live-kubuntu-2404
echo Sanboot Http Loading file: kubuntu-24.04-desktop-amd64.iso ISO...
sanboot --no-describe http://172.16.0.215:82/kubuntu-24.04-desktop-amd64.iso || goto failed
goto start


# Latest version (jammy 2204) of CLONEZILLA (Works very well, just use gui to restore via nfs 172.16.0.5:/volume1/...* )
# TODO #1 I need to make a casper/vmlinuz.efi version, so that this gui works in both UEFI and LEGACY restores (easy, just grab a 2204 one?)
# TODO #2 Add a customized kernelparam that automounts our nas (this would be awesome to put all clonezillas into the backups dir, and do something like this (the ocs_prerun variable):
:linux-live-foss-clonezilla
echo CLONEZILLA - Http Loading ISO's filesystem.squashfs... 
echo CLONEZILLA - NOTE 1: FIX NEEDED, (Butfor now, squashfs is NON-UEFI, so post restore you need UEFI).
echo CLONEZILLA - NOTE 2: REMEMBER TO USE NFS SETTINGS in GUI like... [172.16.0.5:/volume1/OrioleNAS-Data/mikew/clonezilla-images]
kernel http://172.16.0.215:82/foss_clonezilla/clonezilla-live-3.0.2-21-amd64/live/vmlinuz boot=live config noswap nolocales edd=on nomodeset vga=788 nosplash noprompt fetch=http://172.16.0.215:82/foss_clonezilla/clonezilla-live-3.0.2-21-amd64/live/filesystem.squashfs
initrd http://172.16.0.215:82/foss_clonezilla/clonezilla-live-3.0.2-21-amd64/live/initrd.img
boot
goto start

# Latest version (jammy 2204)
:linux-live-foss-rescuezilla
set server_ip 172.16.0.215
set nfs_path /lm_iso/foss_rescuezilla/rescuezilla-2.4.1-64bit.jammy
kernel http://172.16.0.215:82/foss_rescuezilla/rescuezilla-2.4.1-64bit.jammy/casper/vmlinuz  || read void
initrd http://172.16.0.215:82/foss_rescuezilla/rescuezilla-2.4.1-64bit.jammy/casper/initrd.lz   || read void
imgargs vmlinuz initrd=initrd.lz root=/dev/nfs live-media-path=/casper/ ignore_uuid boot=casper netboot=nfs nfsroot=${server_ip}:${nfs_path} ip=dhcp splash quiet -- || read void
boot
goto start

# # Bob's version with an extra utility he add, and re-built the ISO (focal xfce 2004)
# :linux-live-lm-rescuezilla
# set server_ip 172.16.0.215
# set nfs_path /lm_iso/lm_rescuezilla
# kernel http://172.16.0.215:82/lm_rescuezilla/casper/vmlinuz  || read void
# initrd http://172.16.0.215:82/lm_rescuezilla/casper/initrd.lz   || read void
# imgargs vmlinuz initrd=initrd.lz root=/dev/nfs live-media-path=/casper/ ignore_uuid boot=casper netboot=nfs nfsroot=${server_ip}:${nfs_path} ip=dhcp splash quiet -- || read void
# boot
# goto start

:linux-live-vyos
set server_ip 172.16.0.215
set nfs_path /lm_iso/lm_vyos_1.4
kernel http://172.16.0.215:82/lm_vyos_1.4/live/vmlinuz  || read void
initrd http://172.16.0.215:82/lm_vyos_1.4/live/initrd.img   || read void
imgargs vmlinuz initrd=initrd.img root=/dev/nfs boot=live username=live nopersistence noautologin nonetworking union=overlay fetch=http://172.16.0.5:8083/VyOS/vyos-1.4-rolling-202104061641-amd64/live/filesystem.squashfs -- || read void
boot
goto start

# This does not work without internet, so I removed it.
# :linux-live-bootrepair
# set server_ip 172.16.0.215
# set nfs_path /lm_iso/lm_boot-repair-disk
# kernel http://172.16.0.215:82/lm_boot-repair-disk/casper/vmlinuz.efi  || read void
# initrd http://172.16.0.215:82/lm_boot-repair-disk/casper/initrd.lz   || read void
# imgargs vmlinuz.efi initrd=initrd.lz root=/dev/nfs boot=casper ip=dhcp netboot=nfs nfsroot=${server_ip}:${nfs_path} #FIX THIS
# boot
# goto start

#########################################################################
# TOP SPACEWALK MENU
#########################################################################
:spacewalk
echo Chain Loading file: pxelinux.0 from spacewalk server...
set 210:string tftp://172.16.0.138/
set 209:string pxelinux.cfg/default
chain tftp://172.16.0.138/pxelinux.0 || goto start

#########################################################################
# TOP ACRONIS MENU
#########################################################################
:acronis
echo Sanboot Http Loading file: AcronisBackup 12.5 ISO...
sanboot --no-describe http://172.16.0.215:82/AcronisBackup_12.5_Boot_media.iso || goto failed
goto start


#########################################################################
# TOP GHOST MENU
#########################################################################

#This will only work with legacy bios - in order to support UEFI, you need to purhase broadcom ghost software suite.
:ghost
echo Wimboot Loading file: Ghost BCD, Boot.Sdi, and Boot.wim...
kernel wimboot
initrd -n BCD 		http://172.16.0.215:82/lm_ghost/BOOT/BCD 		        BCD
initrd -n boot.sdi 	http://172.16.0.215:82/lm_ghost/BOOT/BOOT.SDI		    boot.sdi
initrd -n boot.wim 	http://172.16.0.215:82/lm_ghost/SOURCES/BOOT.WIM		boot.wim
boot
goto start

#########################################################################
#TOP ESX MENU
#########################################################################

#Follow the below link to get working with UEFI
#https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.esxi.upgrade.doc/GUID-EA4C5A77-2C88-4519-AB94-E56871EE6DF4.html

:esx-menu
set submenu-timeout 0
clear submenu-default
menu ESX Menu 
item --key l esx-legacy         [L] - Legacy BIOS ESX 7.0
item --key u esx-uefi           [U] - UEFI ESX 7.0
item
item --key b start              [B] - Back to previous
choose --timeout ${submenu-timeout} --default ${submenu-default} selected && goto ${selected} || goto start
go start # End of Submenu

:esx-legacy
sanboot http://172.16.0.215:82/lm_esxi_7.0/esx7.0.iso

:esx-uefi
set server_ip 172.16.0.215
set nfs_path /lm_iso/lm_esxi_7.0
kernel http://172.16.0.215:82/lm_esxi_7.0/mboot.efi  || read void
initrd http://172.16.0.215:82/lm_esxi_7.0/EFI/BOOT/BOOT.CFG   || read void
imgargs mboot.efi root=/dev/nfs ip=dhcp netboot=nfs nfsroot=${server_ip}:${nfs_path}
boot
goto start # Return to Topmenu

