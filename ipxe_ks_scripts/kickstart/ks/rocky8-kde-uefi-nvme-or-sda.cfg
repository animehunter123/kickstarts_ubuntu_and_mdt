#platform=x86, AMD64, or Intel EM64T
#version=ROCKY8

# # Disk partitioning information
# clearpart --initlabel --all
# parted --script /dev/sda 'mklabel gpt'
# parted --script /dev/sda 'mkpart primary linux 1 2000M'
# parted --script /dev/sda 'set 1 name ext4'
# parted --script /dev/sda 'mkpart primary swap 2000M 4000M'
# parted --script /dev/sda 'set 2 name swap'
# parted --script /dev/sda 'mkpart primary root 4000M 100%'
# parted --script /dev/sda 'set 3 name ext4'

# Disk partitioning information
# clearpart --initlabel --all
# parted --script /dev/nvme0n1 'mklabel gpt'
# parted --script /dev/nvme0n1 'mkpart primary linux 1 2000M'
# parted --script /dev/nvme0n1 'set 1 name ext4'
# parted --script /dev/nvme0n1 'mkpart primary swap 2000M 4000M'
# parted --script /dev/nvme0n1 'set 2 name swap'
# parted --script /dev/nvme0n1 'mkpart primary root 4000M 100%'
# parted --script /dev/nvme0n1 'set 3 name ext4'

# # Partition clearing information
# clearpart --all --drives=nvme0n1 --initlabel
# # Disk partitioning information for a 1TB drive
# part /boot --fstype="xfs" --ondisk=nvme0n1 --size=2048 --fsoptions="nosuid,nodev"
# part /boot/efi --fstype="efi" --ondisk=nvme0n1 --size=600 --fsoptions="umask=0077,shortname=winnt,nodev"
# part / --fstype="xfs" --ondisk=nvme0n1 --size=999036  # Fill the remaining space with the root partition

# This worked
# part /boot/efi --fstype efi --size 1024 --asprimary --ondisk=nvme0n1
# part /boot --fstype ext4 --size 1024 --asprimary --ondisk=nvme0n1
# part swap --size 1024 --asprimary  --ondisk=nvme0n1
# part / --fstype ext4 --size 8192 --ondisk=nvme0n1
# part /tmp --fstype ext4 --size 8192 --ondisk=nvme0n1
# part /var --fstype ext4 --size 9182 --ondisk=nvme0n1
# part /opt --fstype ext4 --size 1 --grow --ondisk=nvme0n1

part /boot/efi --fstype efi --size 1024 --asprimary
part /boot --fstype ext4 --size 1024 --asprimary
part swap --size 1024 --asprimary 
part / --fstype ext4 --size 8192 --grow

# #volume groups
# volgroup rhel --pesize=4096 pv.4675
# logvol / --fstype="xfs" --size=614400 --name=root --vgname=rhel
# logvol /home --fstype="xfs" --size=204800 --name=home --vgname=rhel --fsoptions="nosuid,nodev"
# logvol /tmp --fstype="xfs" --size=6427 --name=tmp --vgname=rhel --fsoptions="noexec,nosuid,nodev"
# logvol /var --fstype="xfs" --size=62400 --name=var --vgname=rhel --fsoptions="nosuid,nodev"
# logvol /var/tmp --fstype="xfs" --size=20000 --name=var_tmp --vgname=rhel --fsoptions="noexec,nosuid,nodev"
# logvol /var/log --fstype="xfs" --size=20000 --name=var_log --vgname=rhel --fsoptions="noexec,nosuid,nodev"
# logvol /var/log/audit --fstype="xfs" --size=20482 --name=var_log_audit --vgname=rhel --fsoptions="noexec,nosuid,nodev"


# Install OS instead of upgrade
install
# Keyboard layouts
keyboard 'us'
# Root password
rootpw --iscrypted $1$VzQErpFK$r6MVLh9oJAzWKoFKyuAol/
# SELinux configuration
selinux --disabled
# Firewall configuration
firewall --disabled
network --bootproto=dhcp --device=link --activate --onboot=on
services --enabled=sshd,NetworkManager,chronyd
# System language
lang en_US.UTF-8
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use text mode install
text
# Run the Setup Agent on first boot
firstboot --disable
# Skip regenerating a kernel/initrafm? (Might make open-vm-tools not work correctly, but speedup kicks!)
# installkernel --no-kernel-build
# installinitramfs --no-initramfs-build
# Reboot after installation
reboot
# System timezone
timezone Asia/Tokyo
# System bootloader configuration
# bootloader --location=mbr
# bootloader --location=none --efi  # Try this if the below --uefi doesnt work!
# bootloader --uefi

# Clear the Master Boot Record
zerombr
# Partition clearing information
clearpart --all --initlabel

# Use NFS installation media // Repository configuration (Rocky8 onwards uses HTTP instead of NFS!!!)
# nfs --server=INSERT_YOUR_NAS_HERE.YOURDOMAIN.COM --dir=/volume1/MYSITENAS-Data/repos/rocky/8/BaseOS/x86_64/os/ 
url --url http://INSERT_YOUR_WEBSERVER_HERE.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/os/ 
repo --name="BaseOS" --baseurl=http://INSERT_YOUR_WEBSERVER_HERE.YOURDOMAIN.COM/repos/rocky/8/BaseOS/x86_64/os/ --install
repo --name="Appstream" --baseurl=http://INSERT_YOUR_WEBSERVER_HERE.YOURDOMAIN.COM/repos/rocky/8/AppStream/x86_64/os/ --install
repo --name="Extras" --baseurl=http://INSERT_YOUR_WEBSERVER_HERE.YOURDOMAIN.COM/repos/rocky/8/extras/x86_64/os/ --install
repo --name="Powertools" --baseurl=http://INSERT_YOUR_WEBSERVER_HERE.YOURDOMAIN.COM/repos/rocky/8/PowerTools/x86_64/os/ --install
repo --name="EPEL8" --baseurl=http://INSERT_YOUR_WEBSERVER_HERE.YOURDOMAIN.COM/repos/epel/8/Everything/x86_64 --install 


# POST INSTALLATION SCRIPTS!!!
%post

    # Switch current console to tty4, and duplicate output of tty4 to itself
    exec < /dev/tty4 > /dev/tty4
    chvt 4

    # Executing kickstart post configuration script for BASELINE...
    cd /root
    wget -c "http://INSERT_YOUR_WEBSERVER_HERE.YOURDOMAIN.COM/http-git/kickstart/post-scripts/setup-rocky8-configuration.sh"
    bash "./setup-rocky8-configuration.sh"

    # Executing kickstart post configuration script for GUI APPs...
    cd /root
    wget -c "http://INSERT_YOUR_WEBSERVER_HERE.YOURDOMAIN.COM/http-git/kickstart/post-scripts/setup-rocky8-kde-desktop-environment.sh"
    bash "./setup-rocky8-kde-desktop-environment.sh"

    # Switch back to main console tty1
    chvt 1

%end

# Baseline Package Installation
%packages
    @core
    cifs-utils
    nfs-utils
    net-tools
    git
    chrony
    cloud-utils-growpart
    vim
    bash-completion
    nano
    tuned
    tmux
    wget
    python3
%end

